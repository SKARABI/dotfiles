# Split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind %
unbind '"'
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Bind new window keeping current pane path
unbind 'c'
bind c new-window -c "#{pane_current_path}"

# Move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Toggle synchronize panes
bind y setw synchronize-panes

# Resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g status-keys vi

# Bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# Change prefix key
unbind C-b
set-option -g prefix C-a

# # Colours
# set-window-option -g window-status-current-fg red
# set-window-option -g window-status-bell-fg black
# 
# ## Command bar
# set-option -g message-fg white
# set-option -g message-bg colour13
# set-option -g message-attr bright
# 
# ## Panes separator
# set-option -g pane-border-fg yellow
# set-option -g pane-active-border-fg yellow
# 
# # Statusline
set -g status-left-length 20
set -g status-left ' #[fg=colour16]#S #[fg=colour9]âˆ† #[bg=red]#[fg=white]'
set -g status-right '#[fg=colour20]#H '

# Dynamic window title
set-option -g set-titles on

# Set first window to 1 instead of 0
set-option -g base-index 1

# Set History Size
set -g history-limit 10000

# Correct term for 256 colours
set-option -g default-terminal 'screen-256color'

# Status bar position
set-option -g status-position top

set -sg escape-time 0
